{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport { Button, Form, Input, Table, Popconfirm, Modal } from \"antd\";\nimport \"./supplier.css\";\nimport { getSupplier, addSupplier, updateSupplier, delSupplier } from \"../../api/index.js\";\n\n// const Supplier = () => {\n//   const [listData, setListData] = useState({ keyword: \"\" });\n//   const [tableData, setTableData] = useState([]);\n//   // 0 add, 1 edit\n//   const [modalType, setModalType] = useState(0);\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [form] = Form.useForm();\n\n//   // Implement adding or editing a supplier\n//   const handleClick = (type, rowData) => {\n//     setIsModalOpen(!isModalOpen);\n//     if (type === \"add\") {\n//       setModalType(0);\n//     } else {\n//       setModalType(1);\n//       //get data from the row\n//       const cloneData = JSON.parse(JSON.stringify(rowData));\n//       form.setFieldsValue(cloneData);\n//     }\n//   };\n\n//   // confirm Modal\n//   const handleOk = () => {\n//     //validate form\n//     form\n//       .validateFields()\n//       .then((val) => {\n//         // console.log(val, \"val\");\n//         if (modalType) {\n//           updateSupplier(val).then(() => {\n//             handleCancel();\n//             getTableData();\n//           });\n//         } else {\n//           addSupplier(val).then(() => {\n//             //close the modal\n//             handleCancel();\n//             //update data in the table\n//             getTableData();\n//           });\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n\n//   // cancel Modal\n//   const handleCancel = () => {\n//     setIsModalOpen(false);\n//     //clear data in the form\n//     form.resetFields();\n//   };\n\n//   // handle search form submission\n//   const handleFinish = (e) => {\n//     setListData({ keyword: e.keyword }); //updates the state variable listData\n//     getSupplier({ keyword: e.keyword }) //makes an API call to retrieve data from the backend\n//       .then(({ data }) => {\n//         setTableData(data.data); // Update table data with the filtered results\n//       })\n//       .catch((error) => {\n//         console.error(\"Error searching suppliers:\", error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     getTableData();\n//     console.log(tableData, \"effect\");\n//   }, [listData]);\n\n//   // Implement Delete\n//   const handleDelete = (id) => {\n//     delSupplier(id)\n//       .then(() => {\n//         getTableData();\n//       })\n//       .catch((error) => {\n//         console.error(\"Error deleting supplier:\", error);\n//       });\n//   };\n\n//   //get the table data\n//   const getTableData = () => {\n//     // console.log(\"Request parameters:\", listData);\n//     getSupplier(listData)\n//       .then(({ data }) => {\n//         console.log(data.data, \"res\");\n//         setTableData(data.data);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const columns = [\n//     {\n//       title: \"ID\",\n//       dataIndex: \"id\",\n//     },\n//     {\n//       title: \"Supplier\",\n//       dataIndex: \"supplierName\",\n//     },\n//     {\n//       title: \"Address\",\n//       dataIndex: \"address\",\n//     },\n//     {\n//       title: \"Contact Person\",\n//       dataIndex: \"contactPerson\",\n//     },\n//     {\n//       title: \"E-Mail\",\n//       dataIndex: \"email\",\n//     },\n//     {\n//       title: \"Comment\",\n//       dataIndex: \"comment\",\n//     },\n//     {\n//       title: \"Action\",\n//       render: (rowData) => {\n//         return (\n//           <div className=\"flex-box\">\n//             <Button\n//               style={{ marginRight: \"5px\" }}\n//               onClick={() => handleClick(\"edit\", rowData)}\n//             >\n//               Edit\n//             </Button>\n//             <Popconfirm\n//               title=\"Do you really want to delete this supplier?\"\n//               okText=\"Confirm\"\n//               cancelText=\"Cancel\"\n//               onConfirm={() => handleDelete(rowData.id)}\n//             >\n//               <Button type=\"primary\" danger>\n//                 Delete\n//               </Button>\n//             </Popconfirm>\n//           </div>\n//         );\n//       },\n//     },\n//   ];\n\n//   return (\n//     <div className=\"supplier\">\n//       <div className=\"flex-box space-between\">\n//         <Form layout=\"inline\" onFinish={handleFinish}>\n//           <Form.Item name=\"keyword\">\n//             <Input placeholder=\"supplier name\"></Input>\n//           </Form.Item>\n//           <Form.Item>\n//             <Button htmlType=\"submit\" type=\"primary\">\n//               Search\n//             </Button>\n//           </Form.Item>\n//         </Form>\n//         <Button\n//           type=\"primary\"\n//           onClick={() => {\n//             handleClick(\"add\");\n//           }}\n//         >\n//           +Add Supplier\n//         </Button>\n//       </div>\n//       <Table\n//         style={{ marginTop: \"20px\" }}\n//         columns={columns}\n//         dataSource={tableData}\n//         rowKey={\"id\"}\n//       ></Table>\n//       <Modal\n//         open={isModalOpen}\n//         title={modalType ? \"Edit Supplier\" : \"Add Supplier\"}\n//         onOk={handleOk}\n//         onCancel={handleCancel}\n//       >\n//         <Form\n//           form={form}\n//           labelCol={{\n//             span: 6,\n//           }}\n//           wrapperCol={{\n//             span: 18,\n//           }}\n//           labelAlign=\"left\"\n//         >\n//           {modalType === 1 && (\n//             <Form.Item name=\"id\" hidden>\n//               <Input />\n//             </Form.Item>\n//           )}\n\n//           <Form.Item\n//             label=\"Supplier\"\n//             name=\"supplierName\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier name\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier name\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Address\"\n//             name=\"address\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier address\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"PPlease enter supplier address\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Contact Person\"\n//             name=\"contactPerson\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier contact person\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier contact person\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"E-Mail\"\n//             name=\"email\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier E-Mail\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier E-Mail\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Comment\"\n//             name=\"comment\"\n//             rules={[\n//               {\n//                 required: false,\n//                 message: \"Enter comment if needed\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Enter comment if needed\"></Input>\n//           </Form.Item>\n//         </Form>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default Supplier;","map":{"version":3,"names":["React","useEffect","useState","Button","Form","Input","Table","Popconfirm","Modal","getSupplier","addSupplier","updateSupplier","delSupplier"],"sources":["/Users/liu/Library/CloudStorage/Dropbox/Projects/procurement-management/src/pages/supplier/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Form, Input, Table, Popconfirm, Modal } from \"antd\";\nimport \"./supplier.css\";\nimport {\n  getSupplier,\n  addSupplier,\n  updateSupplier,\n  delSupplier,\n} from \"../../api/index.js\";\n\n// const Supplier = () => {\n//   const [listData, setListData] = useState({ keyword: \"\" });\n//   const [tableData, setTableData] = useState([]);\n//   // 0 add, 1 edit\n//   const [modalType, setModalType] = useState(0);\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [form] = Form.useForm();\n\n//   // Implement adding or editing a supplier\n//   const handleClick = (type, rowData) => {\n//     setIsModalOpen(!isModalOpen);\n//     if (type === \"add\") {\n//       setModalType(0);\n//     } else {\n//       setModalType(1);\n//       //get data from the row\n//       const cloneData = JSON.parse(JSON.stringify(rowData));\n//       form.setFieldsValue(cloneData);\n//     }\n//   };\n\n//   // confirm Modal\n//   const handleOk = () => {\n//     //validate form\n//     form\n//       .validateFields()\n//       .then((val) => {\n//         // console.log(val, \"val\");\n//         if (modalType) {\n//           updateSupplier(val).then(() => {\n//             handleCancel();\n//             getTableData();\n//           });\n//         } else {\n//           addSupplier(val).then(() => {\n//             //close the modal\n//             handleCancel();\n//             //update data in the table\n//             getTableData();\n//           });\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n\n//   // cancel Modal\n//   const handleCancel = () => {\n//     setIsModalOpen(false);\n//     //clear data in the form\n//     form.resetFields();\n//   };\n\n//   // handle search form submission\n//   const handleFinish = (e) => {\n//     setListData({ keyword: e.keyword }); //updates the state variable listData\n//     getSupplier({ keyword: e.keyword }) //makes an API call to retrieve data from the backend\n//       .then(({ data }) => {\n//         setTableData(data.data); // Update table data with the filtered results\n//       })\n//       .catch((error) => {\n//         console.error(\"Error searching suppliers:\", error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     getTableData();\n//     console.log(tableData, \"effect\");\n//   }, [listData]);\n\n//   // Implement Delete\n//   const handleDelete = (id) => {\n//     delSupplier(id)\n//       .then(() => {\n//         getTableData();\n//       })\n//       .catch((error) => {\n//         console.error(\"Error deleting supplier:\", error);\n//       });\n//   };\n\n//   //get the table data\n//   const getTableData = () => {\n//     // console.log(\"Request parameters:\", listData);\n//     getSupplier(listData)\n//       .then(({ data }) => {\n//         console.log(data.data, \"res\");\n//         setTableData(data.data);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const columns = [\n//     {\n//       title: \"ID\",\n//       dataIndex: \"id\",\n//     },\n//     {\n//       title: \"Supplier\",\n//       dataIndex: \"supplierName\",\n//     },\n//     {\n//       title: \"Address\",\n//       dataIndex: \"address\",\n//     },\n//     {\n//       title: \"Contact Person\",\n//       dataIndex: \"contactPerson\",\n//     },\n//     {\n//       title: \"E-Mail\",\n//       dataIndex: \"email\",\n//     },\n//     {\n//       title: \"Comment\",\n//       dataIndex: \"comment\",\n//     },\n//     {\n//       title: \"Action\",\n//       render: (rowData) => {\n//         return (\n//           <div className=\"flex-box\">\n//             <Button\n//               style={{ marginRight: \"5px\" }}\n//               onClick={() => handleClick(\"edit\", rowData)}\n//             >\n//               Edit\n//             </Button>\n//             <Popconfirm\n//               title=\"Do you really want to delete this supplier?\"\n//               okText=\"Confirm\"\n//               cancelText=\"Cancel\"\n//               onConfirm={() => handleDelete(rowData.id)}\n//             >\n//               <Button type=\"primary\" danger>\n//                 Delete\n//               </Button>\n//             </Popconfirm>\n//           </div>\n//         );\n//       },\n//     },\n//   ];\n\n//   return (\n//     <div className=\"supplier\">\n//       <div className=\"flex-box space-between\">\n//         <Form layout=\"inline\" onFinish={handleFinish}>\n//           <Form.Item name=\"keyword\">\n//             <Input placeholder=\"supplier name\"></Input>\n//           </Form.Item>\n//           <Form.Item>\n//             <Button htmlType=\"submit\" type=\"primary\">\n//               Search\n//             </Button>\n//           </Form.Item>\n//         </Form>\n//         <Button\n//           type=\"primary\"\n//           onClick={() => {\n//             handleClick(\"add\");\n//           }}\n//         >\n//           +Add Supplier\n//         </Button>\n//       </div>\n//       <Table\n//         style={{ marginTop: \"20px\" }}\n//         columns={columns}\n//         dataSource={tableData}\n//         rowKey={\"id\"}\n//       ></Table>\n//       <Modal\n//         open={isModalOpen}\n//         title={modalType ? \"Edit Supplier\" : \"Add Supplier\"}\n//         onOk={handleOk}\n//         onCancel={handleCancel}\n//       >\n//         <Form\n//           form={form}\n//           labelCol={{\n//             span: 6,\n//           }}\n//           wrapperCol={{\n//             span: 18,\n//           }}\n//           labelAlign=\"left\"\n//         >\n//           {modalType === 1 && (\n//             <Form.Item name=\"id\" hidden>\n//               <Input />\n//             </Form.Item>\n//           )}\n\n//           <Form.Item\n//             label=\"Supplier\"\n//             name=\"supplierName\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier name\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier name\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Address\"\n//             name=\"address\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier address\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"PPlease enter supplier address\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Contact Person\"\n//             name=\"contactPerson\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier contact person\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier contact person\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"E-Mail\"\n//             name=\"email\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier E-Mail\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier E-Mail\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Comment\"\n//             name=\"comment\"\n//             rules={[\n//               {\n//                 required: false,\n//                 message: \"Enter comment if needed\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Enter comment if needed\"></Input>\n//           </Form.Item>\n//         </Form>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default Supplier;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,KAAK,QAAQ,MAAM;AACpE,OAAO,gBAAgB;AACvB,SACEC,WAAW,EACXC,WAAW,EACXC,cAAc,EACdC,WAAW,QACN,oBAAoB;;AAE3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}