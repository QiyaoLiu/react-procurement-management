{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = \"/api\";\nclass HttpRequest {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n  getInsideConfig() {\n    const config = {\n      baseUrl: this.baseUrl,\n      header: {}\n    };\n    return config;\n  }\n  interseption(instance) {\n    // Add a request interceptor\n    instance.interceptors.request.use(function (config) {\n      // Do something before request is sent\n      return config;\n    }, function (error) {\n      // Do something with request error\n      return Promise.reject(error);\n    });\n\n    // Add a response interceptor\n    instance.interceptors.response.use(function (response) {\n      // Any status code that lie within the range of 2xx cause this function to trigger\n      // Do something with response data\n      return response;\n    }, function (error) {\n      // Any status codes that falls outside the range of 2xx cause this function to trigger\n      // Do something with response error\n      return Promise.reject(error);\n    });\n  }\n  request(options) {\n    options = {\n      ...this.getInsideConfig(),\n      ...options\n    };\n    const instance = axios.create();\n    this.interseption(instance);\n    return instance(options);\n  }\n}\nexport default new HttpRequest(baseUrl);","map":{"version":3,"names":["axios","baseUrl","HttpRequest","constructor","getInsideConfig","config","header","interseption","instance","interceptors","request","use","error","Promise","reject","response","options","create"],"sources":["/Users/liu/Library/CloudStorage/Dropbox/Projects/procurement-management/src/api/axios.js"],"sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api\";\n\nclass HttpRequest {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n  getInsideConfig() {\n    const config = {\n      baseUrl: this.baseUrl,\n      header: {},\n    };\n    return config;\n  }\n  interseption(instance) {\n    // Add a request interceptor\n    instance.interceptors.request.use(\n      function (config) {\n        // Do something before request is sent\n        return config;\n      },\n      function (error) {\n        // Do something with request error\n        return Promise.reject(error);\n      }\n    );\n\n    // Add a response interceptor\n    instance.interceptors.response.use(\n      function (response) {\n        // Any status code that lie within the range of 2xx cause this function to trigger\n        // Do something with response data\n        return response;\n      },\n      function (error) {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        // Do something with response error\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  request(options) {\n    options = { ...this.getInsideConfig(), ...options };\n    const instance = axios.create();\n\n    this.interseption(instance);\n\n    return instance(options);\n  }\n}\nexport default new HttpRequest(baseUrl);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,MAAM;AAEtB,MAAMC,WAAW,CAAC;EAChBC,WAAWA,CAACF,OAAO,EAAE;IACnB,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EACAG,eAAeA,CAAA,EAAG;IAChB,MAAMC,MAAM,GAAG;MACbJ,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBK,MAAM,EAAE,CAAC;IACX,CAAC;IACD,OAAOD,MAAM;EACf;EACAE,YAAYA,CAACC,QAAQ,EAAE;IACrB;IACAA,QAAQ,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/B,UAAUN,MAAM,EAAE;MAChB;MACA,OAAOA,MAAM;IACf,CAAC,EACD,UAAUO,KAAK,EAAE;MACf;MACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAC9B,CACF,CAAC;;IAED;IACAJ,QAAQ,CAACC,YAAY,CAACM,QAAQ,CAACJ,GAAG,CAChC,UAAUI,QAAQ,EAAE;MAClB;MACA;MACA,OAAOA,QAAQ;IACjB,CAAC,EACD,UAAUH,KAAK,EAAE;MACf;MACA;MACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;IAC9B,CACF,CAAC;EACH;EAEAF,OAAOA,CAACM,OAAO,EAAE;IACfA,OAAO,GAAG;MAAE,GAAG,IAAI,CAACZ,eAAe,CAAC,CAAC;MAAE,GAAGY;IAAQ,CAAC;IACnD,MAAMR,QAAQ,GAAGR,KAAK,CAACiB,MAAM,CAAC,CAAC;IAE/B,IAAI,CAACV,YAAY,CAACC,QAAQ,CAAC;IAE3B,OAAOA,QAAQ,CAACQ,OAAO,CAAC;EAC1B;AACF;AACA,eAAe,IAAId,WAAW,CAACD,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}