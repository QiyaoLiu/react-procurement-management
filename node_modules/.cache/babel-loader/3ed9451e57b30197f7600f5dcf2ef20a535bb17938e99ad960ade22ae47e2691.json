{"ast":null,"code":"var _jsxFileName = \"/Users/liu/Library/CloudStorage/Dropbox/Projects/procurement-management/src/pages/supplier/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Input, Table, Popconfirm, Modal } from \"antd\";\nimport \"./supplier.css\";\nimport { getSupplier, addSupplier, updateSupplier, delSupplier } from \"../../api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Supplier = () => {\n  _s();\n  const [listData, setListData] = useState({\n    keyword: \"\"\n  });\n  const [tableData, setTableData] = useState([]);\n  const [modalType, setModalType] = useState(0);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [form] = Form.useForm();\n  const handleClick = (type, rowData) => {\n    setIsModalOpen(true);\n    if (type === \"add\") {\n      setModalType(0);\n    } else {\n      setModalType(1);\n      const cloneData = JSON.parse(JSON.stringify(rowData));\n      form.setFieldsValue(cloneData);\n    }\n  };\n  const handleOk = () => {\n    form.validateFields().then(val => {\n      if (modalType) {\n        updateSupplier(val).then(() => {\n          handleCancel();\n          getTableData();\n        }).catch(error => {\n          message.error(\"Failed to update supplier\");\n          console.error(\"Update error:\", error);\n        });\n      } else {\n        addSupplier(val).then(() => {\n          handleCancel();\n          getTableData();\n        }).catch(error => {\n          message.error(\"Failed to add supplier\");\n          console.error(\"Add error:\", error);\n        });\n      }\n    }).catch(err => {\n      console.log(\"Validation error:\", err);\n    });\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    form.resetFields();\n  };\n  const handleFinish = e => {\n    setListData({\n      keyword: e.keyword\n    });\n  };\n  useEffect(() => {\n    getTableData();\n  }, [listData]);\n  const handleDelete = id => {\n    delSupplier(id).then(() => {\n      getTableData();\n    }).catch(error => {\n      message.error(\"Failed to delete supplier\");\n      console.error(\"Delete error:\", error);\n    });\n  };\n  const getTableData = () => {\n    getSupplier(listData).then(({\n      data\n    }) => {\n      if (data.code === 1) {\n        setTableData(data.data);\n      } else {\n        message.error(data.msg);\n      }\n    }).catch(error => {\n      message.error(\"Failed to fetch suppliers\");\n      console.error(\"Fetch error:\", error);\n    });\n  };\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\"\n  }, {\n    title: \"Supplier\",\n    dataIndex: \"supplierName\"\n  }, {\n    title: \"Address\",\n    dataIndex: \"address\"\n  }, {\n    title: \"Contact Person\",\n    dataIndex: \"contactPerson\"\n  }, {\n    title: \"E-Mail\",\n    dataIndex: \"email\"\n  }, {\n    title: \"Comment\",\n    dataIndex: \"comment\"\n  }, {\n    title: \"Action\",\n    render: rowData => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-box\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: \"5px\"\n          },\n          onClick: () => handleClick(\"edit\", rowData),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Do you really want to delete this supplier?\",\n          okText: \"Confirm\",\n          cancelText: \"Cancel\",\n          onConfirm: () => handleDelete(rowData.id),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            danger: true,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"supplier\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-box space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        layout: \"inline\",\n        onFinish: handleFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"keyword\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"supplier name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            type: \"primary\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          handleClick(\"add\");\n        },\n        children: \"+Add Supplier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      style: {\n        marginTop: \"20px\"\n      },\n      columns: columns,\n      dataSource: tableData,\n      rowKey: \"id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isModalOpen,\n      title: modalType ? \"Edit Supplier\" : \"Add Supplier\",\n      onOk: handleOk,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        labelCol: {\n          span: 6\n        },\n        wrapperCol: {\n          span: 18\n        },\n        labelAlign: \"left\",\n        children: [modalType === 1 && /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"id\",\n          hidden: true,\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Supplier\",\n          name: \"supplierName\",\n          rules: [{\n            required: true,\n            message: \"Please enter supplier name\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please enter supplier name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Address\",\n          name: \"address\",\n          rules: [{\n            required: true,\n            message: \"Please enter supplier address\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please enter supplier address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Contact Person\",\n          name: \"contactPerson\",\n          rules: [{\n            required: true,\n            message: \"Please enter supplier contact person\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please enter supplier contact person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"E-Mail\",\n          name: \"email\",\n          rules: [{\n            required: true,\n            message: \"Please enter supplier E-Mail\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please enter supplier E-Mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Comment\",\n          name: \"comment\",\n          rules: [{\n            required: false,\n            message: \"Enter comment if needed\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Enter comment if needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Supplier, \"8hpZMxe9X40kpNQJCkwgxWyMo38=\", false, function () {\n  return [Form.useForm];\n});\n_c = Supplier;\nexport default Supplier;\n\n// const Supplier = () => {\n//   const [listData, setListData] = useState({ keyword: \"\" });\n//   const [tableData, setTableData] = useState([]);\n//   // 0 add, 1 edit\n//   const [modalType, setModalType] = useState(0);\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [form] = Form.useForm();\n\n//   // Implement adding or editing a supplier\n//   const handleClick = (type, rowData) => {\n//     setIsModalOpen(!isModalOpen);\n//     if (type === \"add\") {\n//       setModalType(0);\n//     } else {\n//       setModalType(1);\n//       //get data from the row\n//       const cloneData = JSON.parse(JSON.stringify(rowData));\n//       form.setFieldsValue(cloneData);\n//     }\n//   };\n\n//   // confirm Modal\n//   const handleOk = () => {\n//     //validate form\n//     form\n//       .validateFields()\n//       .then((val) => {\n//         // console.log(val, \"val\");\n//         if (modalType) {\n//           updateSupplier(val).then(() => {\n//             handleCancel();\n//             getTableData();\n//           });\n//         } else {\n//           addSupplier(val).then(() => {\n//             //close the modal\n//             handleCancel();\n//             //update data in the table\n//             getTableData();\n//           });\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n\n//   // cancel Modal\n//   const handleCancel = () => {\n//     setIsModalOpen(false);\n//     //clear data in the form\n//     form.resetFields();\n//   };\n\n//   // handle search form submission\n//   const handleFinish = (e) => {\n//     setListData({ keyword: e.keyword }); //updates the state variable listData\n//     getSupplier({ keyword: e.keyword }) //makes an API call to retrieve data from the backend\n//       .then(({ data }) => {\n//         setTableData(data.data); // Update table data with the filtered results\n//       })\n//       .catch((error) => {\n//         console.error(\"Error searching suppliers:\", error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     getTableData();\n//     console.log(tableData, \"effect\");\n//   }, [listData]);\n\n//   // Implement Delete\n//   const handleDelete = (id) => {\n//     delSupplier(id)\n//       .then(() => {\n//         getTableData();\n//       })\n//       .catch((error) => {\n//         console.error(\"Error deleting supplier:\", error);\n//       });\n//   };\n\n//   //get the table data\n//   const getTableData = () => {\n//     // console.log(\"Request parameters:\", listData);\n//     getSupplier(listData)\n//       .then(({ data }) => {\n//         console.log(data.data, \"res\");\n//         setTableData(data.data);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const columns = [\n//     {\n//       title: \"ID\",\n//       dataIndex: \"id\",\n//     },\n//     {\n//       title: \"Supplier\",\n//       dataIndex: \"supplierName\",\n//     },\n//     {\n//       title: \"Address\",\n//       dataIndex: \"address\",\n//     },\n//     {\n//       title: \"Contact Person\",\n//       dataIndex: \"contactPerson\",\n//     },\n//     {\n//       title: \"E-Mail\",\n//       dataIndex: \"email\",\n//     },\n//     {\n//       title: \"Comment\",\n//       dataIndex: \"comment\",\n//     },\n//     {\n//       title: \"Action\",\n//       render: (rowData) => {\n//         return (\n//           <div className=\"flex-box\">\n//             <Button\n//               style={{ marginRight: \"5px\" }}\n//               onClick={() => handleClick(\"edit\", rowData)}\n//             >\n//               Edit\n//             </Button>\n//             <Popconfirm\n//               title=\"Do you really want to delete this supplier?\"\n//               okText=\"Confirm\"\n//               cancelText=\"Cancel\"\n//               onConfirm={() => handleDelete(rowData.id)}\n//             >\n//               <Button type=\"primary\" danger>\n//                 Delete\n//               </Button>\n//             </Popconfirm>\n//           </div>\n//         );\n//       },\n//     },\n//   ];\n\n//   return (\n//     <div className=\"supplier\">\n//       <div className=\"flex-box space-between\">\n//         <Form layout=\"inline\" onFinish={handleFinish}>\n//           <Form.Item name=\"keyword\">\n//             <Input placeholder=\"supplier name\"></Input>\n//           </Form.Item>\n//           <Form.Item>\n//             <Button htmlType=\"submit\" type=\"primary\">\n//               Search\n//             </Button>\n//           </Form.Item>\n//         </Form>\n//         <Button\n//           type=\"primary\"\n//           onClick={() => {\n//             handleClick(\"add\");\n//           }}\n//         >\n//           +Add Supplier\n//         </Button>\n//       </div>\n//       <Table\n//         style={{ marginTop: \"20px\" }}\n//         columns={columns}\n//         dataSource={tableData}\n//         rowKey={\"id\"}\n//       ></Table>\n//       <Modal\n//         open={isModalOpen}\n//         title={modalType ? \"Edit Supplier\" : \"Add Supplier\"}\n//         onOk={handleOk}\n//         onCancel={handleCancel}\n//       >\n//         <Form\n//           form={form}\n//           labelCol={{\n//             span: 6,\n//           }}\n//           wrapperCol={{\n//             span: 18,\n//           }}\n//           labelAlign=\"left\"\n//         >\n//           {modalType === 1 && (\n//             <Form.Item name=\"id\" hidden>\n//               <Input />\n//             </Form.Item>\n//           )}\n\n//           <Form.Item\n//             label=\"Supplier\"\n//             name=\"supplierName\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier name\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier name\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Address\"\n//             name=\"address\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier address\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"PPlease enter supplier address\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Contact Person\"\n//             name=\"contactPerson\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier contact person\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier contact person\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"E-Mail\"\n//             name=\"email\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier E-Mail\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier E-Mail\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Comment\"\n//             name=\"comment\"\n//             rules={[\n//               {\n//                 required: false,\n//                 message: \"Enter comment if needed\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Enter comment if needed\"></Input>\n//           </Form.Item>\n//         </Form>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default Supplier;\nvar _c;\n$RefreshReg$(_c, \"Supplier\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","Input","Table","Popconfirm","Modal","getSupplier","addSupplier","updateSupplier","delSupplier","jsxDEV","_jsxDEV","Supplier","_s","listData","setListData","keyword","tableData","setTableData","modalType","setModalType","isModalOpen","setIsModalOpen","form","useForm","handleClick","type","rowData","cloneData","JSON","parse","stringify","setFieldsValue","handleOk","validateFields","then","val","handleCancel","getTableData","catch","error","message","console","err","log","resetFields","handleFinish","e","handleDelete","id","data","code","msg","columns","title","dataIndex","render","className","children","style","marginRight","onClick","fileName","_jsxFileName","lineNumber","columnNumber","okText","cancelText","onConfirm","danger","layout","onFinish","Item","name","placeholder","htmlType","marginTop","dataSource","rowKey","open","onOk","onCancel","labelCol","span","wrapperCol","labelAlign","hidden","label","rules","required","_c","$RefreshReg$"],"sources":["/Users/liu/Library/CloudStorage/Dropbox/Projects/procurement-management/src/pages/supplier/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Form, Input, Table, Popconfirm, Modal } from \"antd\";\nimport \"./supplier.css\";\nimport {\n  getSupplier,\n  addSupplier,\n  updateSupplier,\n  delSupplier,\n} from \"../../api/index.js\";\nconst Supplier = () => {\n  const [listData, setListData] = useState({ keyword: \"\" });\n  const [tableData, setTableData] = useState([]);\n  const [modalType, setModalType] = useState(0);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleClick = (type, rowData) => {\n    setIsModalOpen(true);\n    if (type === \"add\") {\n      setModalType(0);\n    } else {\n      setModalType(1);\n      const cloneData = JSON.parse(JSON.stringify(rowData));\n      form.setFieldsValue(cloneData);\n    }\n  };\n\n  const handleOk = () => {\n    form\n      .validateFields()\n      .then((val) => {\n        if (modalType) {\n          updateSupplier(val)\n            .then(() => {\n              handleCancel();\n              getTableData();\n            })\n            .catch((error) => {\n              message.error(\"Failed to update supplier\");\n              console.error(\"Update error:\", error);\n            });\n        } else {\n          addSupplier(val)\n            .then(() => {\n              handleCancel();\n              getTableData();\n            })\n            .catch((error) => {\n              message.error(\"Failed to add supplier\");\n              console.error(\"Add error:\", error);\n            });\n        }\n      })\n      .catch((err) => {\n        console.log(\"Validation error:\", err);\n      });\n  };\n\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    form.resetFields();\n  };\n\n  const handleFinish = (e) => {\n    setListData({ keyword: e.keyword });\n  };\n\n  useEffect(() => {\n    getTableData();\n  }, [listData]);\n\n  const handleDelete = (id) => {\n    delSupplier(id)\n      .then(() => {\n        getTableData();\n      })\n      .catch((error) => {\n        message.error(\"Failed to delete supplier\");\n        console.error(\"Delete error:\", error);\n      });\n  };\n\n  const getTableData = () => {\n    getSupplier(listData)\n      .then(({ data }) => {\n        if (data.code === 1) {\n          setTableData(data.data);\n        } else {\n          message.error(data.msg);\n        }\n      })\n      .catch((error) => {\n        message.error(\"Failed to fetch suppliers\");\n        console.error(\"Fetch error:\", error);\n      });\n  };\n\n  const columns = [\n    {\n      title: \"ID\",\n      dataIndex: \"id\",\n    },\n    {\n      title: \"Supplier\",\n      dataIndex: \"supplierName\",\n    },\n    {\n      title: \"Address\",\n      dataIndex: \"address\",\n    },\n    {\n      title: \"Contact Person\",\n      dataIndex: \"contactPerson\",\n    },\n    {\n      title: \"E-Mail\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"Comment\",\n      dataIndex: \"comment\",\n    },\n    {\n      title: \"Action\",\n      render: (rowData) => {\n        return (\n          <div className=\"flex-box\">\n            <Button\n              style={{ marginRight: \"5px\" }}\n              onClick={() => handleClick(\"edit\", rowData)}\n            >\n              Edit\n            </Button>\n            <Popconfirm\n              title=\"Do you really want to delete this supplier?\"\n              okText=\"Confirm\"\n              cancelText=\"Cancel\"\n              onConfirm={() => handleDelete(rowData.id)}\n            >\n              <Button type=\"primary\" danger>\n                Delete\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"supplier\">\n      <div className=\"flex-box space-between\">\n        <Form layout=\"inline\" onFinish={handleFinish}>\n          <Form.Item name=\"keyword\">\n            <Input placeholder=\"supplier name\"></Input>\n          </Form.Item>\n          <Form.Item>\n            <Button htmlType=\"submit\" type=\"primary\">\n              Search\n            </Button>\n          </Form.Item>\n        </Form>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            handleClick(\"add\");\n          }}\n        >\n          +Add Supplier\n        </Button>\n      </div>\n      <Table\n        style={{ marginTop: \"20px\" }}\n        columns={columns}\n        dataSource={tableData}\n        rowKey={\"id\"}\n      />\n      <Modal\n        open={isModalOpen}\n        title={modalType ? \"Edit Supplier\" : \"Add Supplier\"}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <Form\n          form={form}\n          labelCol={{\n            span: 6,\n          }}\n          wrapperCol={{\n            span: 18,\n          }}\n          labelAlign=\"left\"\n        >\n          {modalType === 1 && (\n            <Form.Item name=\"id\" hidden>\n              <Input />\n            </Form.Item>\n          )}\n          <Form.Item\n            label=\"Supplier\"\n            name=\"supplierName\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter supplier name\",\n              },\n            ]}\n          >\n            <Input placeholder=\"Please enter supplier name\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Address\"\n            name=\"address\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter supplier address\",\n              },\n            ]}\n          >\n            <Input placeholder=\"Please enter supplier address\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Contact Person\"\n            name=\"contactPerson\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter supplier contact person\",\n              },\n            ]}\n          >\n            <Input placeholder=\"Please enter supplier contact person\" />\n          </Form.Item>\n          <Form.Item\n            label=\"E-Mail\"\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter supplier E-Mail\",\n              },\n            ]}\n          >\n            <Input placeholder=\"Please enter supplier E-Mail\" />\n          </Form.Item>\n          <Form.Item\n            label=\"Comment\"\n            name=\"comment\"\n            rules={[\n              {\n                required: false,\n                message: \"Enter comment if needed\",\n              },\n            ]}\n          >\n            <Input placeholder=\"Enter comment if needed\" />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Supplier;\n\n// const Supplier = () => {\n//   const [listData, setListData] = useState({ keyword: \"\" });\n//   const [tableData, setTableData] = useState([]);\n//   // 0 add, 1 edit\n//   const [modalType, setModalType] = useState(0);\n\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const [form] = Form.useForm();\n\n//   // Implement adding or editing a supplier\n//   const handleClick = (type, rowData) => {\n//     setIsModalOpen(!isModalOpen);\n//     if (type === \"add\") {\n//       setModalType(0);\n//     } else {\n//       setModalType(1);\n//       //get data from the row\n//       const cloneData = JSON.parse(JSON.stringify(rowData));\n//       form.setFieldsValue(cloneData);\n//     }\n//   };\n\n//   // confirm Modal\n//   const handleOk = () => {\n//     //validate form\n//     form\n//       .validateFields()\n//       .then((val) => {\n//         // console.log(val, \"val\");\n//         if (modalType) {\n//           updateSupplier(val).then(() => {\n//             handleCancel();\n//             getTableData();\n//           });\n//         } else {\n//           addSupplier(val).then(() => {\n//             //close the modal\n//             handleCancel();\n//             //update data in the table\n//             getTableData();\n//           });\n//         }\n//       })\n//       .catch((err) => {\n//         console.log(err);\n//       });\n//   };\n\n//   // cancel Modal\n//   const handleCancel = () => {\n//     setIsModalOpen(false);\n//     //clear data in the form\n//     form.resetFields();\n//   };\n\n//   // handle search form submission\n//   const handleFinish = (e) => {\n//     setListData({ keyword: e.keyword }); //updates the state variable listData\n//     getSupplier({ keyword: e.keyword }) //makes an API call to retrieve data from the backend\n//       .then(({ data }) => {\n//         setTableData(data.data); // Update table data with the filtered results\n//       })\n//       .catch((error) => {\n//         console.error(\"Error searching suppliers:\", error);\n//       });\n//   };\n\n//   useEffect(() => {\n//     getTableData();\n//     console.log(tableData, \"effect\");\n//   }, [listData]);\n\n//   // Implement Delete\n//   const handleDelete = (id) => {\n//     delSupplier(id)\n//       .then(() => {\n//         getTableData();\n//       })\n//       .catch((error) => {\n//         console.error(\"Error deleting supplier:\", error);\n//       });\n//   };\n\n//   //get the table data\n//   const getTableData = () => {\n//     // console.log(\"Request parameters:\", listData);\n//     getSupplier(listData)\n//       .then(({ data }) => {\n//         console.log(data.data, \"res\");\n//         setTableData(data.data);\n//       })\n//       .catch((error) => {\n//         console.error(error);\n//       });\n//   };\n\n//   const columns = [\n//     {\n//       title: \"ID\",\n//       dataIndex: \"id\",\n//     },\n//     {\n//       title: \"Supplier\",\n//       dataIndex: \"supplierName\",\n//     },\n//     {\n//       title: \"Address\",\n//       dataIndex: \"address\",\n//     },\n//     {\n//       title: \"Contact Person\",\n//       dataIndex: \"contactPerson\",\n//     },\n//     {\n//       title: \"E-Mail\",\n//       dataIndex: \"email\",\n//     },\n//     {\n//       title: \"Comment\",\n//       dataIndex: \"comment\",\n//     },\n//     {\n//       title: \"Action\",\n//       render: (rowData) => {\n//         return (\n//           <div className=\"flex-box\">\n//             <Button\n//               style={{ marginRight: \"5px\" }}\n//               onClick={() => handleClick(\"edit\", rowData)}\n//             >\n//               Edit\n//             </Button>\n//             <Popconfirm\n//               title=\"Do you really want to delete this supplier?\"\n//               okText=\"Confirm\"\n//               cancelText=\"Cancel\"\n//               onConfirm={() => handleDelete(rowData.id)}\n//             >\n//               <Button type=\"primary\" danger>\n//                 Delete\n//               </Button>\n//             </Popconfirm>\n//           </div>\n//         );\n//       },\n//     },\n//   ];\n\n//   return (\n//     <div className=\"supplier\">\n//       <div className=\"flex-box space-between\">\n//         <Form layout=\"inline\" onFinish={handleFinish}>\n//           <Form.Item name=\"keyword\">\n//             <Input placeholder=\"supplier name\"></Input>\n//           </Form.Item>\n//           <Form.Item>\n//             <Button htmlType=\"submit\" type=\"primary\">\n//               Search\n//             </Button>\n//           </Form.Item>\n//         </Form>\n//         <Button\n//           type=\"primary\"\n//           onClick={() => {\n//             handleClick(\"add\");\n//           }}\n//         >\n//           +Add Supplier\n//         </Button>\n//       </div>\n//       <Table\n//         style={{ marginTop: \"20px\" }}\n//         columns={columns}\n//         dataSource={tableData}\n//         rowKey={\"id\"}\n//       ></Table>\n//       <Modal\n//         open={isModalOpen}\n//         title={modalType ? \"Edit Supplier\" : \"Add Supplier\"}\n//         onOk={handleOk}\n//         onCancel={handleCancel}\n//       >\n//         <Form\n//           form={form}\n//           labelCol={{\n//             span: 6,\n//           }}\n//           wrapperCol={{\n//             span: 18,\n//           }}\n//           labelAlign=\"left\"\n//         >\n//           {modalType === 1 && (\n//             <Form.Item name=\"id\" hidden>\n//               <Input />\n//             </Form.Item>\n//           )}\n\n//           <Form.Item\n//             label=\"Supplier\"\n//             name=\"supplierName\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier name\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier name\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Address\"\n//             name=\"address\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier address\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"PPlease enter supplier address\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Contact Person\"\n//             name=\"contactPerson\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier contact person\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier contact person\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"E-Mail\"\n//             name=\"email\"\n//             rules={[\n//               {\n//                 required: true,\n//                 message: \"Please enter supplier E-Mail\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Please enter supplier E-Mail\"></Input>\n//           </Form.Item>\n//           <Form.Item\n//             label=\"Comment\"\n//             name=\"comment\"\n//             rules={[\n//               {\n//                 required: false,\n//                 message: \"Enter comment if needed\",\n//               },\n//             ]}\n//           >\n//             <Input placeholder=\"Enter comment if needed\"></Input>\n//           </Form.Item>\n//         </Form>\n//       </Modal>\n//     </div>\n//   );\n// };\n\n// export default Supplier;\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}