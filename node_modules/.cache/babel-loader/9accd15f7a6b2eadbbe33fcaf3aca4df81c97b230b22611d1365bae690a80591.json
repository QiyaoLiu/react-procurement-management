{"ast":null,"code":"var _jsxFileName = \"/Users/liu/Library/CloudStorage/Dropbox/Projects/procurement-management/src/pages/login/index.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport \"./login.css\";\nimport { getPermission } from \"../../api\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // If already logged in, navigate to home\n  if (localStorage.getItem(\"token\")) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/home\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Handle form submission\n  const handleSubmit = async values => {\n    const {\n      username,\n      password\n    } = values;\n    if (!username || !password) {\n      message.warning(\"Please enter username and password\");\n      return;\n    }\n    try {\n      const {\n        data\n      } = await getPermission(values); // Await the API call\n\n      if (data.code === 1) {\n        localStorage.setItem(\"token\", data.data); // Store the token\n        navigate(\"/home\"); // Navigate to home on successful login\n      } else {\n        message.error(data.msg); // Show error message from API\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      message.error(\"Failed to login. Please try again later.\"); // Show generic error message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"login-container\",\n    onFinish: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_title\",\n      children: \"System Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Account Name\",\n      name: \"username\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Please enter account name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {\n        placeholder: \"Please enter password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      className: \"login-button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Form","Input","Button","message","getPermission","useNavigate","Navigate","jsxDEV","_jsxDEV","Login","_s","navigate","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","values","username","password","warning","data","code","setItem","error","msg","console","className","onFinish","children","Item","label","name","placeholder","Password","type","htmlType","_c","$RefreshReg$"],"sources":["/Users/liu/Library/CloudStorage/Dropbox/Projects/procurement-management/src/pages/login/index.js"],"sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport \"./login.css\";\nimport { getPermission } from \"../../api\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n\n  // If already logged in, navigate to home\n  if (localStorage.getItem(\"token\")) {\n    return <Navigate to=\"/home\" replace />;\n  }\n\n  // Handle form submission\n  const handleSubmit = async (values) => {\n    const { username, password } = values;\n\n    if (!username || !password) {\n      message.warning(\"Please enter username and password\");\n      return;\n    }\n\n    try {\n      const { data } = await getPermission(values); // Await the API call\n\n      if (data.code === 1) {\n        localStorage.setItem(\"token\", data.data); // Store the token\n        navigate(\"/home\"); // Navigate to home on successful login\n      } else {\n        message.error(data.msg); // Show error message from API\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      message.error(\"Failed to login. Please try again later.\"); // Show generic error message\n    }\n  };\n\n  return (\n    <Form className=\"login-container\" onFinish={handleSubmit}>\n      <div className=\"login_title\">System Login</div>\n      <Form.Item label=\"Account Name\" name=\"username\">\n        <Input placeholder=\"Please enter account name\" />\n      </Form.Item>\n\n      <Form.Item label=\"Password\" name=\"password\">\n        <Input.Password placeholder=\"Please enter password\" />\n      </Form.Item>\n      <Form.Item className=\"login-button\">\n        <Button type=\"primary\" htmlType=\"submit\">\n          Login\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}